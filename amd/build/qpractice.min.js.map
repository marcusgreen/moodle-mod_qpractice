{"version":3,"file":"qpractice.min.js","sources":["../src/qpractice.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * JavaScript code for the qpractice activity.\n *\n * @subpackage qpractice\n * @copyright  2024 Marcus Green\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\nexport const init = () => {\n\n    document.getElementById('id_select_all_none').addEventListener('click', function() {\n            var checkboxes = document.querySelectorAll(\"input[type='checkbox'].question_category\");\n            checkboxes.forEach(checkbox =>{\n                checkbox.checked = !checkbox.checked;\n            });\n    });\n    document.querySelectorAll(\"input[type='checkbox'].question_category\").forEach(\n            input => input.addEventListener('click', function(event) {\n                var checkboxid = event.target.id.split('_')[2];\n                if(event.target.checked == true) {\n                selectChildren(checkboxid, true);\n                } else{\n                    selectChildren(checkboxid, false);\n\n                }\n            })\n        );\n    };\n    syncCategoryValues();\n    function syncCategoryValues() {\n        const categoryElements = document.querySelectorAll('[name^=\"category[\"]');\n        debugger;\n        categoryElements.forEach(function(element) {\n            const categoryId = element.name.match(/\\d+/)[0];\n            const matchingCheckbox = document.querySelector(`[id^=\"id_categories_${categoryId}\"]`);\n            if (matchingCheckbox) {\n                matchingCheckbox.checked = element.checked;\n            }\n        });\n    }\n\n    //id_categories_2_parent_1\n\n/**\n * Select or deselect child checkboxes\n * @param {string} checkboxid - The ID of the parent checkbox\n * @param {boolean} isChecked - Whether to check or uncheck the children\n */\nfunction selectChildren(checkboxid, isChecked){\n    var checkboxes =  document.querySelectorAll(\"input[type='checkbox'].question_category\");\n    checkboxes.forEach(function(checkbox) {\n        var thisparentid = checkbox.id.split('_')[4];\n        if(thisparentid == checkboxid){\n            checkbox.checked= isChecked;\n        }\n\n    });\n}\n\n"],"names":["selectChildren","checkboxid","isChecked","document","querySelectorAll","forEach","checkbox","id","split","checked","getElementById","addEventListener","input","event","target","categoryElements","element","categoryId","name","match","matchingCheckbox","querySelector","syncCategoryValues"],"mappings":"uJA8DSA,eAAeC,WAAYC,WACdC,SAASC,iBAAiB,4CACjCC,SAAQ,SAASC,UACLA,SAASC,GAAGC,MAAM,KAAK,IACvBP,aACfK,SAASG,QAASP,4BA7CV,KAEhBC,SAASO,eAAe,sBAAsBC,iBAAiB,SAAS,WAC/CR,SAASC,iBAAiB,4CAChCC,SAAQC,WACfA,SAASG,SAAWH,SAASG,cAGzCN,SAASC,iBAAiB,4CAA4CC,SAC9DO,OAASA,MAAMD,iBAAiB,SAAS,SAASE,WAC1CZ,WAAaY,MAAMC,OAAOP,GAAGC,MAAM,KAAK,GACjB,GAAxBK,MAAMC,OAAOL,QAChBT,eAAeC,YAAY,GAEvBD,eAAeC,YAAY,0BAQjCc,iBAAmBZ,SAASC,iBAAiB,uBAEnDW,iBAAiBV,SAAQ,SAASW,eACxBC,WAAaD,QAAQE,KAAKC,MAAM,OAAO,GACvCC,iBAAmBjB,SAASkB,4CAAqCJ,kBACnEG,mBACAA,iBAAiBX,QAAUO,QAAQP,YAR/Ca"}